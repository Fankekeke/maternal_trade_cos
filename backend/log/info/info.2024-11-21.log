2024-11-21 08:24:01.276 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-KJDA35RA4FP with PID 36856 (started by Administrator in G:\Project\20241121二手母婴用品交易平台\maternal_trade_cos\backend)
2024-11-21 08:24:01.279 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2024-11-21 08:24:02.080 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2024-11-21 08:24:02.082 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2024-11-21 08:24:02.138 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42ms. Found 0 repository interfaces.
2024-11-21 08:24:02.394 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$caf5548d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:02.492 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:02.559 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$a544a031] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:02.565 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:02.568 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:02.576 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3bb62f60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:02.589 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$a7363109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:02.876 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$9ffae85d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:02.893 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:02.896 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:02.969 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:02.975 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$8d3d8b6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:02.978 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:02.982 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$797e9bfa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:02.989 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:02.991 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:02.995 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2024-11-21 08:24:03.000 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2024-11-21 08:24:03.159 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2024-11-21 08:24:03.159 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2024-11-21 08:24:03.159 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2024-11-21 08:24:03.159 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2024-11-21 08:24:03.159 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.170 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.177 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.668 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.673 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.675 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.677 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.700 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.705 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.710 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.711 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.712 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.746 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.761 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.780 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.781 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.783 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.800 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.802 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.827 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.828 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.831 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.850 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.852 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.853 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.UserInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.865 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.882 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$9749aef1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.886 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$4996710a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.888 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$4ad56f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.893 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.895 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.900 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$2b78ce27] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.906 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.908 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$79554c80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.917 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.919 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.922 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.924 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.942 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.951 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.955 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.955 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.963 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:03.975 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-11-21 08:24:04.261 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2024-11-21 08:24:04.271 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2024-11-21 08:24:04.275 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-11-21 08:24:04.275 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2024-11-21 08:24:04.279 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\办公软件\Git\cmd;F:\Yarn\bin\;F:\Bandizip\;F:\nodejs\;F:\Development\Scripts\;F:\Development\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2024-11-21 08:24:04.383 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-11-21 08:24:04.383 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3029 ms
2024-11-21 08:24:04.858 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2024-11-21 08:24:04.859 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2024-11-21 08:24:04.859 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2024-11-21 08:24:04.859 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2024-11-21 08:24:04.859 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2024-11-21 08:24:04.859 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2024-11-21 08:24:04.859 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2024-11-21 08:24:04.859 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2024-11-21 08:24:05.290 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2024-11-21 08:24:05.301 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2024-11-21 08:24:05.302 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2024-11-21 08:24:05.306 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2024-11-21 08:24:05.307 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2024-11-21 08:24:05.308 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-KJDA35RA4FP1732148645291'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2024-11-21 08:24:05.308 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2024-11-21 08:24:05.308 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2024-11-21 08:24:05.309 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@ba87c11
2024-11-21 08:24:05.351 febs [main] INFO  p6spy - 2024-11-21 08:24:05 | 耗时 1 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2024-11-21 08:24:05.826 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2024-11-21 08:24:07.589 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2024-11-21 08:24:07.733 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2024-11-21 08:24:07.963 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2024-11-21 08:24:07.982 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2024-11-21 08:24:07.998 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2024-11-21 08:24:07.999 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2024-11-21 08:24:08.024 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2024-11-21 08:24:08.028 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.211 seconds (JVM running for 7.939)
2024-11-21 08:24:08.041 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2024-11-21 08:24:08.043 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2024-11-21 08:24:08.043 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2024-11-21 08:24:08.083 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2024-11-21 08:24:08.092 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-11-21 08:24:08.167 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2024-11-21 08:24:08.184 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2024-11-21 08:24:08.203 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2024-11-21 08:24:08.209 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-11-21 08:24:08.213 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2024-11-21 08:24:08.217 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2024-11-21 08:24:08.221 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2024-11-21 08:24:08.225 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-11-21 08:24:08.228 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2024-11-21 08:24:08.232 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2024-11-21 08:24:08.235 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2024-11-21 08:24:08.239 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-11-21 08:24:08.244 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2024-11-21 08:24:08.247 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2024-11-21 08:24:08.249 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2024-11-21 08:24:08.253 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-11-21 08:24:08.258 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2024-11-21 08:24:08.261 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2024-11-21 08:24:08.263 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2024-11-21 08:24:08.267 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'test2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-11-21 08:24:08.271 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'test2';
2024-11-21 08:24:08.275 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'test2' and m.perms is not null and m.perms <> '';
2024-11-21 08:24:08.277 febs [main] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='17' ;
2024-11-21 08:24:08.278 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2024-11-21 08:24:08.278 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2024-11-21 08:24:08.278 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2024-11-21 08:24:08.278 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2024-11-21 08:24:08.279 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FanK 启动完毕，时间：2024-11-21T08:24:08.278
2024-11-21 08:24:08.633 febs [RMI TCP Connection(4)-192.168.1.3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-21 08:24:08.633 febs [RMI TCP Connection(3)-192.168.1.3] INFO  p6spy - 2024-11-21 08:24:08 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2024-11-21 08:24:08.634 febs [RMI TCP Connection(4)-192.168.1.3] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-11-21 08:24:08.649 febs [RMI TCP Connection(4)-192.168.1.3] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2024-11-21 08:24:08.968 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2024-11-21 08:24:08.977 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2024-11-21 08:24:08.977 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-KJDA35RA4FP1698505035646"'s failed in-progress jobs.
2024-11-21 08:24:08.981 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-KJDA35RA4FP1732148645291 started.
2024-11-21 08:26:00.389 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-11-21 08:26:00.390 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-11-21 08:26:00.390 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-11-21 08:26:00.459 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-11-21 08:26:00 | 耗时 1 ms | SQL 语句：
SELECT ID,code,name,images,create_by,create_date FROM commodity_type;
2024-11-21 08:26:00.492 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-11-21 08:26:00 | 耗时 1 ms | SQL 语句：
SELECT ID,code,buy_user_id,sell_user_id,commodity_id,total_price,total_after_price,pay_status,pey_type,logistics,create_date,pay_time FROM order_info WHERE pay_status > 0;
2024-11-21 08:26:00.534 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-11-21 08:26:00 | 耗时 32 ms | SQL 语句：
SELECT COUNT( 1 ) FROM commodity_info;
2024-11-21 08:26:00.546 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-11-21 08:26:00.560 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-11-21 08:26:00 | 耗时 0 ms | SQL 语句：
SELECT ID,code,title,content,name,type_id,brand,model,quality,user_id,click_num,click_time,price,store_num,create_time,update_time,status,images FROM commodity_info WHERE type_id = 1 AND status = 0;
2024-11-21 08:26:00.561 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-11-21 08:26:00 | 耗时 21 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2024-11-21 08:26:00.565 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-11-21 08:26:00 | 耗时 1 ms | SQL 语句：
select oi.id, oi.code, oi.buy_user_id, oi.sell_user_id, oi.commodity_id, oi.total_price, oi.total_after_price, oi.pay_status, oi.pey_type, oi.logistics, oi.create_date, oi.pay_time from order_info oi where DATE_FORMAT( oi.create_date, '%Y%m' ) = DATE_FORMAT( CURDATE(), '%Y%m');
2024-11-21 08:26:00.574 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-11-21 08:26:00 | 耗时 0 ms | SQL 语句：
select oi.id, oi.code, oi.buy_user_id, oi.sell_user_id, oi.commodity_id, oi.total_price, oi.total_after_price, oi.pay_status, oi.pey_type, oi.logistics, oi.create_date, oi.pay_time from order_info oi where DATE_FORMAT( oi.create_date, '%Y' ) = DATE_FORMAT( CURDATE(), '%Y');
2024-11-21 08:26:00.584 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-11-21 08:26:00 | 耗时 2 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2024-11-21 08:26:00.589 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-11-21 08:26:00 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN order_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2024-11-21 08:26:00.594 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-11-21 08:26:00 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(SUM(oi.total_after_price), 0) AS price FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN order_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2024-11-21 08:26:00.599 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-11-21 08:26:00 | 耗时 2 ms | SQL 语句：
select count(oi.id) as count, ct.name from order_info oi left join commodity_info ci on (ci.id = oi.commodity_id) left join commodity_type ct on (ct.id = ci.type_id) where 1 = 1 group by ci.type_id;
2024-11-21 08:26:00.618 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-11-21 08:26:00 | 耗时 54 ms | SQL 语句：
select count(1) from t_login_log;
2024-11-21 08:26:00.621 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-11-21 08:26:00 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2024-11-21 08:26:00.624 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-11-21 08:26:00 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2024-11-21 08:26:00.629 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-11-21 08:26:00 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2024-11-21 08:26:00.632 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-11-21 08:26:00 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2024-11-21 08:34:16.214 febs [http-nio-9527-exec-5] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2024-11-21 08:34:16.266 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-11-21 08:34:16 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET last_login_time='2024-11-21T08:34:16.254+0800' WHERE username = 'admin';
2024-11-21 08:34:16.269 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-11-21 08:34:16 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-11-21 08:34:16.288 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-11-21 08:34:16 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2024-11-21T08:34:16.275+0800', '', '127.0.0.1' );
2024-11-21 08:34:16.316 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-11-21 08:34:16.326 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-11-21 08:34:16 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2024-11-21 08:34:16.561 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-11-21 08:34:16.573 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-11-21 08:34:16.574 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-11-21 08:34:16.576 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-11-21 08:34:16 | 耗时 1 ms | SQL 语句：
SELECT ID,code,name,images,create_by,create_date FROM commodity_type;
2024-11-21 08:34:16.576 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-11-21 08:34:16 | 耗时 11 ms | SQL 语句：
select count(1) from t_login_log;
2024-11-21 08:34:16.579 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-11-21 08:34:16 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2024-11-21 08:34:16.580 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-11-21 08:34:16 | 耗时 1 ms | SQL 语句：
SELECT ID,code,buy_user_id,sell_user_id,commodity_id,total_price,total_after_price,pay_status,pey_type,logistics,create_date,pay_time FROM order_info WHERE pay_status > 0;
2024-11-21 08:34:16.582 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-11-21 08:34:16 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2024-11-21 08:34:16.584 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-11-21 08:34:16 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2024-11-21 08:34:16.588 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-11-21 08:34:16 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2024-11-21 08:34:16.588 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-11-21 08:34:16 | 耗时 5 ms | SQL 语句：
SELECT COUNT( 1 ) FROM commodity_info;
2024-11-21 08:34:16.602 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-11-21 08:34:16 | 耗时 13 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2024-11-21 08:34:16.604 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-11-21 08:34:16 | 耗时 0 ms | SQL 语句：
select oi.id, oi.code, oi.buy_user_id, oi.sell_user_id, oi.commodity_id, oi.total_price, oi.total_after_price, oi.pay_status, oi.pey_type, oi.logistics, oi.create_date, oi.pay_time from order_info oi where DATE_FORMAT( oi.create_date, '%Y%m' ) = DATE_FORMAT( CURDATE(), '%Y%m');
2024-11-21 08:34:16.605 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-11-21 08:34:16 | 耗时 0 ms | SQL 语句：
select oi.id, oi.code, oi.buy_user_id, oi.sell_user_id, oi.commodity_id, oi.total_price, oi.total_after_price, oi.pay_status, oi.pey_type, oi.logistics, oi.create_date, oi.pay_time from order_info oi where DATE_FORMAT( oi.create_date, '%Y' ) = DATE_FORMAT( CURDATE(), '%Y');
2024-11-21 08:34:16.607 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-11-21 08:34:16.608 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-11-21 08:34:16 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2024-11-21 08:34:16.610 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-11-21 08:34:16 | 耗时 0 ms | SQL 语句：
SELECT ID,code,title,content,name,type_id,brand,model,quality,user_id,click_num,click_time,price,store_num,create_time,update_time,status,images FROM commodity_info WHERE type_id = 1 AND status = 0;
2024-11-21 08:34:16.610 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-11-21 08:34:16 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN order_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2024-11-21 08:34:16.613 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-11-21 08:34:16 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(SUM(oi.total_after_price), 0) AS price FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN order_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2024-11-21 08:34:16.614 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-11-21 08:34:16 | 耗时 0 ms | SQL 语句：
select count(oi.id) as count, ct.name from order_info oi left join commodity_info ci on (ci.id = oi.commodity_id) left join commodity_type ct on (ct.id = ci.type_id) where 1 = 1 group by ci.type_id;
2024-11-21 08:34:21.786 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-11-21 08:34:21.838 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-11-21 08:34:21 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM collect_info ci LEFT JOIN user_info ui ON (ui.id = ci.user_id) LEFT JOIN commodity_info coi ON (coi.id = ci.commodity_id) LEFT JOIN commodity_type ct ON (ct.id = coi.type_id) WHERE 1 = 1;
2024-11-21 08:34:21.843 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-11-21 08:34:21 | 耗时 0 ms | SQL 语句：
select ci.id, ci.commodity_id, ci.user_id, ci.create_date, ui.code, ui.name as userName, ui.phone, coi.title, coi.name as commodityName, ct.name as typeName, coi.images, coi.status from collect_info ci left join user_info ui on (ui.id = ci.user_id) left join commodity_info coi on (coi.id = ci.commodity_id) left join commodity_type ct on (ct.id = coi.type_id) where 1 = 1 order by ci.create_date desc LIMIT 0,10;
2024-11-21 08:34:27.618 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-11-21 08:34:27.659 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-11-21 08:34:27 | 耗时 1 ms | SQL 语句：
UPDATE t_user_config SET theme='dark', layout='side', multi_page='0', color='rgb(66, 185, 131)' WHERE USER_ID=13;
2024-11-21 08:34:27.660 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-11-21 08:34:27 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2024-11-21 08:34:29.437 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-11-21 08:34:29.439 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-11-21 08:34:29.441 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-11-21 08:34:29 | 耗时 0 ms | SQL 语句：
SELECT ID,code,name,images,create_by,create_date FROM commodity_type;
2024-11-21 08:34:29.455 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-11-21 08:34:29 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM commodity_info coi LEFT JOIN user_info ui ON (ui.id = coi.user_id) LEFT JOIN commodity_type ct ON (ct.id = coi.type_id) WHERE 1 = 1;
2024-11-21 08:34:29.456 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-11-21 08:34:29 | 耗时 0 ms | SQL 语句：
select coi.id, coi.code, coi.title, coi.content, coi.name, coi.type_id, coi.brand, coi.model, coi.quality, coi.user_id, coi.click_num, coi.click_time, coi.price, coi.store_num, coi.create_time, coi.update_time, coi.status, coi.images, ui.code, ui.name as userName, ui.phone, ct.name as typeName from commodity_info coi left join user_info ui on (ui.id = coi.user_id) left join commodity_type ct on (ct.id = coi.type_id) where 1 = 1 order by coi.create_time desc LIMIT 0,10;
2024-11-21 08:34:32.748 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-11-21 08:34:32.762 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-11-21 08:34:32 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM evaluate_info ei LEFT JOIN order_info oi ON (oi.id = ei.order_id) LEFT JOIN commodity_info coi ON (coi.id = oi.commodity_id) LEFT JOIN user_info ui ON (ui.id = oi.buy_user_id) LEFT JOIN commodity_type ct ON (ct.id = coi.type_id) WHERE 1 = 1;
2024-11-21 08:34:32.763 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-11-21 08:34:32 | 耗时 0 ms | SQL 语句：
select ei.id, ei.order_id, ei.user_id, ei.score, ei.remark, ei.create_date, ei.del_flag, ei.images, ui.code, ui.name as userName, ui.phone, oi.code as orderCode, oi.total_price, coi.title, coi.name as commodityName, ct.name as typeName, coi.images as commodityImages, coi.status from evaluate_info ei left join order_info oi on (oi.id = ei.order_id) left join commodity_info coi on (coi.id = oi.commodity_id) left join user_info ui on (ui.id = oi.buy_user_id) left join commodity_type ct on (ct.id = coi.type_id) where 1 = 1 order by ei.create_date desc LIMIT 0,10;
2024-11-21 08:34:33.617 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-11-21 08:34:33.625 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-11-21 08:34:33 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM order_info oi LEFT JOIN user_info ui ON (ui.id = oi.buy_user_id) LEFT JOIN user_info ui2 ON (ui2.id = oi.sell_user_id) LEFT JOIN commodity_info coi ON (coi.id = oi.commodity_id) LEFT JOIN commodity_type ct ON (ct.id = coi.type_id) LEFT JOIN evaluate_info ei ON (ei.order_id = oi.id) WHERE 1 = 1;
2024-11-21 08:34:33.627 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-11-21 08:34:33 | 耗时 0 ms | SQL 语句：
select oi.id, oi.code, oi.buy_user_id, oi.sell_user_id, oi.commodity_id, oi.total_price, oi.total_after_price, oi.pay_status, oi.pey_type, oi.logistics, oi.create_date, oi.pay_time, ui.code, ui.name as userName, ui.phone, coi.title, coi.name as commodityName, ct.name as typeName, coi.images, coi.price, coi.store_num, ei.id as evaluateId from order_info oi left join user_info ui on (ui.id = oi.buy_user_id) left join user_info ui2 on (ui2.id = oi.sell_user_id) left join commodity_info coi on (coi.id = oi.commodity_id) left join commodity_type ct on (ct.id = coi.type_id) left join evaluate_info ei on (ei.order_id = oi.id) where 1 = 1 order by oi.create_date desc LIMIT 0,10;
2024-11-21 08:34:39.565 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-11-21 08:34:39.580 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-11-21 08:34:39 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM commodity_type WHERE 1 = 1;
2024-11-21 08:34:39.581 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-11-21 08:34:39 | 耗时 0 ms | SQL 语句：
select id, code, name, images, create_by, create_date from commodity_type where 1 = 1 order by create_by desc LIMIT 0,10;
2024-11-21 08:34:40.196 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-11-21 08:34:40.209 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-11-21 08:34:40 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM reply_info ri LEFT JOIN commodity_info ci ON (ci.id = ri.commodity_id) LEFT JOIN user_info ui ON (ui.id = ri.user_id) WHERE ri.del_flag = 0;
2024-11-21 08:34:40.210 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-11-21 08:34:40 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.user_id AS userId, ri.content, ri.commodity_id, ri.reply_user_id replyUserId, ri.create_date AS createDate, ci.title, ci.name as commodityName, ui.code, ui.name as userName, ui.phone, ui.images FROM reply_info ri LEFT JOIN commodity_info ci on (ci.id = ri.commodity_id) LEFT JOIN user_info ui ON (ui.id = ri.user_id) WHERE ri.del_flag = 0 ORDER BY ri.create_date DESC LIMIT 0,10;
